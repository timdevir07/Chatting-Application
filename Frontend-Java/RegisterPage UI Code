*****************First UI CODE*****************
import java.awt.*;
import javax.swing.*;

public class RegisterPage extends JFrame {
    JTextField usernameField;
    JPasswordField passwordField;

    public RegisterPage() {
        setTitle("User Registration");
        setSize(350, 250);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JLabel heading = new JLabel("Register");
        heading.setFont(new Font("Arial", Font.BOLD, 18));
        heading.setHorizontalAlignment(SwingConstants.CENTER);

        JLabel userLabel = new JLabel("Username:");
        JLabel passLabel = new JLabel("Password:");

        usernameField = new JTextField(15);
        passwordField = new JPasswordField(15);

        JButton registerBtn = new JButton("Register");
        JButton loginBtn = new JButton("Go to Login");

        registerBtn.addActionListener(e -> {
            String username = usernameField.getText();
            String password = String.valueOf(passwordField.getPassword());

            // TODO: backend integration yahan karein
            JOptionPane.showMessageDialog(this, "Registered: " + username);
        });

        loginBtn.addActionListener(e -> {
            JOptionPane.showMessageDialog(this, "plz wait (Next Step)");
        });

        JPanel panel = new JPanel(new GridLayout(5, 1, 10, 10));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 50, 20, 50));
        panel.add(heading);
        panel.add(userLabel);
        panel.add(usernameField);
        panel.add(passLabel);
        panel.add(passwordField);

        JPanel btnPanel = new JPanel();
        btnPanel.add(registerBtn);
        btnPanel.add(loginBtn);

        add(panel, BorderLayout.CENTER);
        add(btnPanel, BorderLayout.SOUTH);

        setVisible(true);
    }

    public static void main(String[] args) {
        new RegisterPage();
    }
}

*****************2nd time UI Code*****************

import java.awt.*;
import java.awt.event.*;
import java.util.regex.*;
import javax.swing.*;

public class RegisterPage extends JFrame {
    JTextField inputField;
    JButton getOtpButton;
    JLabel errorLabel;

    public RegisterPage() {
        setTitle("Register - Chat App");
        setSize(400, 300);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        JLabel title = new JLabel("Register", SwingConstants.CENTER);
        title.setFont(new Font("Arial", Font.BOLD, 24));
        title.setBorder(BorderFactory.createEmptyBorder(20, 0, 10, 0));

        inputField = new JTextField();
        inputField.setFont(new Font("Arial", Font.PLAIN, 16));
        inputField.setPreferredSize(new Dimension(250, 35));
        inputField.setToolTipText("Enter email or phone number");

        // Placeholder using Prompt support
        inputField.setText("Enter email or phone number");
        inputField.setForeground(Color.GRAY);

        inputField.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent e) {
                if (inputField.getText().equals("Enter email or phone number")) {
                    inputField.setText("");
                    inputField.setForeground(Color.BLACK);
                }
            }

            public void focusLost(FocusEvent e) {
                if (inputField.getText().isEmpty()) {
                    inputField.setForeground(Color.GRAY);
                    inputField.setText("Enter email or phone number");
                }
            }
        });

        getOtpButton = new JButton("Get OTP");
        getOtpButton.setVisible(false);

        errorLabel = new JLabel("");
        errorLabel.setForeground(Color.RED);
        errorLabel.setHorizontalAlignment(SwingConstants.CENTER);

        JPanel centerPanel = new JPanel();
        centerPanel.setLayout(new GridLayout(4, 1, 10, 10));
        centerPanel.setBorder(BorderFactory.createEmptyBorder(20, 50, 20, 50));
        centerPanel.add(inputField);
        centerPanel.add(getOtpButton);
        centerPanel.add(errorLabel);

        inputField.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent e) {
                validateInput();
            }
        });

        getOtpButton.addActionListener(e -> {
            String input = inputField.getText().trim();
            if (isValidEmail(input)) {
                JOptionPane.showMessageDialog(this, "OTP sent to Email (Mock) for: " + input);
            } else if (isValidPhone(input)) {
                JOptionPane.showMessageDialog(this, "OTP: 946251 (mocked)");
            }
        });

        add(title, BorderLayout.NORTH);
        add(centerPanel, BorderLayout.CENTER);
        setVisible(true);
    }

    private void validateInput() {
        String input = inputField.getText().trim();
        if (isValidEmail(input) || isValidPhone(input)) {
            getOtpButton.setVisible(true);
            errorLabel.setText("");
        } else {
            getOtpButton.setVisible(false);
            if (!input.equals("Enter email or phone number") && !input.isEmpty()) {
                errorLabel.setText("Please enter a valid email or 10-digit phone number.");
            } else {
                errorLabel.setText("");
            }
        }
    }

    private boolean isValidEmail(String email) {
        String regex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$";
        return Pattern.matches(regex, email);
    }

    private boolean isValidPhone(String phone) {
        return phone.matches("\\d{10}");
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new RegisterPage());
    }
}

*****************3rd time UI update code*****************

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.regex.*;

public class RegisterPage extends JFrame {
    JTextField inputField;
    JButton getOtpButton, loginButton;
    JLabel otpLabel, errorLabel;
    String generatedOtp = "";

    public RegisterPage() {
        setTitle("Register - Chat App");
        setSize(400, 350);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        JLabel title = new JLabel("Register", SwingConstants.CENTER);
        title.setFont(new Font("Arial", Font.BOLD, 24));
        title.setBorder(BorderFactory.createEmptyBorder(20, 0, 10, 0));

        inputField = new JTextField();
        inputField.setFont(new Font("Arial", Font.PLAIN, 16));
        inputField.setPreferredSize(new Dimension(250, 35));
        inputField.setText("Enter email or phone number");
        inputField.setForeground(Color.GRAY);

        inputField.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent e) {
                if (inputField.getText().equals("Enter email or phone number")) {
                    inputField.setText("");
                    inputField.setForeground(Color.BLACK);
                }
            }

            public void focusLost(FocusEvent e) {
                if (inputField.getText().isEmpty()) {
                    inputField.setText("Enter email or phone number");
                    inputField.setForeground(Color.GRAY);
                }
            }
        });

        getOtpButton = createStyledButton("Get OTP");
        otpLabel = new JLabel("", SwingConstants.CENTER);
        otpLabel.setFont(new Font("Arial", Font.BOLD, 16));
        otpLabel.setForeground(new Color(0, 102, 0));

        errorLabel = new JLabel("", SwingConstants.CENTER);
        errorLabel.setForeground(Color.RED);

        loginButton = createStyledButton("Go to Login");

        JPanel centerPanel = new JPanel(new GridLayout(6, 1, 10, 10));
        centerPanel.setBorder(BorderFactory.createEmptyBorder(20, 50, 20, 50));
        centerPanel.add(inputField);
        centerPanel.add(getOtpButton);
        centerPanel.add(otpLabel);
        centerPanel.add(errorLabel);
        centerPanel.add(loginButton);

        getOtpButton.addActionListener(e -> handleOtpLogic());

        loginButton.addActionListener(e -> {
            JOptionPane.showMessageDialog(this, "Login page under development!");
        });

        add(title, BorderLayout.NORTH);
        add(centerPanel, BorderLayout.CENTER);

        setVisible(true);
    }

    private void handleOtpLogic() {
        String input = inputField.getText().trim();
        if (isValidEmail(input) || isValidPhone(input)) {
            generatedOtp = "123456"; // Dummy OTP
            otpLabel.setText("Your OTP is: " + generatedOtp + " (Valid for 180 sec)");
            askOtpInput();
            errorLabel.setText("");
        } else {
            errorLabel.setText("Please enter a valid email or 10-digit phone number.");
        }
    }

    private void askOtpInput() {
        String enteredOtp = JOptionPane.showInputDialog(this, "Enter OTP:");
        if (enteredOtp != null && enteredOtp.equals(generatedOtp)) {
            dispose();
            new NamePage();
        } else {
            JOptionPane.showMessageDialog(this, "Invalid OTP!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean isValidEmail(String email) {
        return Pattern.matches("^[\\w.-]+@[\\w.-]+\\.\\w{2,}$", email);
    }

    private boolean isValidPhone(String phone) {
        return phone.matches("\\d{10}");
    }

    private JButton createStyledButton(String text) {
        JButton btn = new JButton(text);
        btn.setFocusPainted(false);
        btn.setFont(new Font("Arial", Font.BOLD, 14));
        btn.setBackground(new Color(30, 144, 255));
        btn.setForeground(Color.WHITE);
        btn.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(0, 90, 180), 1),
            BorderFactory.createEmptyBorder(8, 16, 8, 16)
        ));
        btn.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btn.setOpaque(true);
        return btn;
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(RegisterPage::new);
    }
}


*****************NamePage code this page come after Enter the Otp*****************


*****************This code for the Reg page using Javafx for the better ui*****************
import javafx.application.Application;
import javafx.geometry.*;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.stage.Stage;

import java.util.Random;
import java.util.regex.Pattern;

public class RegisterPage extends Application {

    private String generatedOtp = "";

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Register - Chat App");

        Label heading = new Label("Register");
        heading.setFont(new Font("Arial", 28));
        heading.setTextFill(Color.web("#2c3e50"));

        TextField inputField = new TextField();
        inputField.setPromptText("Enter email or phone number");
        inputField.setPrefHeight(40);
        inputField.setStyle("-fx-background-radius: 12; -fx-font-size: 14px;");

        TextField otpField = new TextField();
        otpField.setPromptText("Enter OTP");
        otpField.setPrefHeight(40);
        otpField.setStyle("-fx-background-radius: 12; -fx-font-size: 14px;");

        Button getOtpBtn = new Button("Get OTP");
        Button submitOtpBtn = new Button("Submit OTP");
        Button goToLoginBtn = new Button("Go to Login");

        Label errorLabel = new Label();
        errorLabel.setTextFill(Color.RED);

        // 3D style button
        String btnStyle = "-fx-background-color: linear-gradient(#27ae60, #2ecc71);" +
                "-fx-text-fill: white; -fx-font-size: 14px;" +
                "-fx-background-radius: 12; -fx-padding: 10 20;" +
                "-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.2), 5, 0, 0, 3);";

        getOtpBtn.setStyle(btnStyle);
        submitOtpBtn.setStyle(btnStyle);
        goToLoginBtn.setStyle(btnStyle);

        getOtpBtn.setOnAction(e -> {
            String input = inputField.getText().trim();
            if (isValidEmail(input) || isValidPhone(input)) {
                generatedOtp = String.valueOf(100000 + new Random().nextInt(900000));
                errorLabel.setText("Your OTP: " + generatedOtp + " (valid 180 sec - mocked)");
            } else {
                errorLabel.setText("Please enter a valid email or 10-digit phone number");
            }
        });

        submitOtpBtn.setOnAction(e -> {
            String otp = otpField.getText().trim();
            if (otp.equals(generatedOtp)) {
                showNamePage(primaryStage);
            } else {
                errorLabel.setText("Invalid OTP");
            }
        });

        goToLoginBtn.setOnAction(e -> {
            showAlert("Redirect", "Going to login page...");
        });

        VBox layout = new VBox(15, heading, inputField, getOtpBtn, otpField, submitOtpBtn, errorLabel, goToLoginBtn);
        layout.setPadding(new Insets(30));
        layout.setAlignment(Pos.CENTER);
        layout.setStyle("-fx-background-color: linear-gradient(to bottom right, #ecf0f1, #dfe6e9);");

        Scene scene = new Scene(layout, 420, 500);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private boolean isValidEmail(String email) {
        return Pattern.matches("^[\\w.-]+@[\\w.-]+\\.[A-Za-z]{2,}$", email);
    }

    private boolean isValidPhone(String phone) {
        return phone.matches("\\d{10}");
    }

    private void showNamePage(Stage stage) {
        Label nameLabel = new Label("Enter Your Name");
        nameLabel.setFont(new Font("Arial", 20));

        TextField nameField = new TextField();
        nameField.setPromptText("Full Name");
        nameField.setPrefHeight(40);
        nameField.setStyle("-fx-background-radius: 12; -fx-font-size: 14px;");

        Button readyToChat = new Button("Ready to Chat");
        readyToChat.setStyle("-fx-background-color: linear-gradient(#e67e22, #f39c12);" +
                "-fx-text-fill: white; -fx-font-size: 14px;" +
                "-fx-background-radius: 12; -fx-padding: 10 20;" +
                "-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.3), 5, 0, 0, 2);");

        readyToChat.setOnAction(e -> {
            String name = nameField.getText().trim();
            if (!name.isEmpty()) {
                showAlert("Welcome", "Hello " + name + ", let's chat!");
                // TODO: redirect to ChatPage
            } else {
                showAlert("Error", "Please enter your name");
            }
        });

        VBox nameLayout = new VBox(20, nameLabel, nameField, readyToChat);
        nameLayout.setAlignment(Pos.CENTER);
        nameLayout.setPadding(new Insets(30));
        nameLayout.setStyle("-fx-background-color: linear-gradient(to bottom right, #f1f2f6, #dff9fb);");

        Scene nameScene = new Scene(nameLayout, 420, 400);
        stage.setScene(nameScene);
    }

    private void showAlert(String title, String msg) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(msg);
        alert.showAndWait();
    }

    public static void main(String[] args) {
        launch(args);
    }
}